{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar React = require(\"react\"),\n    clones_1 = require(\"./utils/clones\"),\n    dots_1 = require(\"./utils/dots\"),\n    common_1 = require(\"./utils/common\"),\n    Dots = function (_a) {\n  var props = _a.props,\n      state = _a.state,\n      goToSlide = _a.goToSlide,\n      getState = _a.getState,\n      showDots = props.showDots,\n      customDot = props.customDot,\n      dotListClass = props.dotListClass,\n      infinite = props.infinite,\n      children = props.children;\n  if (!showDots) return null;\n  var numberOfDotsToShow,\n      currentSlide = state.currentSlide,\n      slidesToShow = state.slidesToShow,\n      slidesToSlide = common_1.getSlidesToSlide(state, props),\n      childrenArr = React.Children.toArray(children);\n  numberOfDotsToShow = infinite ? Math.ceil(childrenArr.length / slidesToSlide) : Math.ceil((childrenArr.length - slidesToShow) / slidesToSlide) + 1;\n  var nextSlidesTable = dots_1.getLookupTableForNextSlides(numberOfDotsToShow, state, props, childrenArr),\n      lookupTable = clones_1.getOriginalIndexLookupTableByClones(slidesToShow, childrenArr),\n      currentSlides = lookupTable[currentSlide];\n  return React.createElement(\"ul\", {\n    className: \"react-multi-carousel-dot-list \" + dotListClass\n  }, Array(numberOfDotsToShow).fill(0).map(function (_, index) {\n    var isActive, nextSlide;\n\n    if (infinite) {\n      nextSlide = nextSlidesTable[index];\n      var cloneIndex = lookupTable[nextSlide];\n      isActive = currentSlides === cloneIndex || cloneIndex <= currentSlides && currentSlides < cloneIndex + slidesToSlide;\n    } else {\n      var maximumNextSlide = childrenArr.length - slidesToShow,\n          possibileNextSlides = index * slidesToSlide;\n      isActive = (nextSlide = maximumNextSlide < possibileNextSlides ? maximumNextSlide : possibileNextSlides) === currentSlide || nextSlide < currentSlide && currentSlide < nextSlide + slidesToSlide && currentSlide < childrenArr.length - slidesToShow;\n    }\n\n    return customDot ? React.cloneElement(customDot, {\n      index: index,\n      active: isActive,\n      key: index,\n      onClick: function () {\n        return goToSlide(nextSlide);\n      },\n      carouselState: getState()\n    }) : React.createElement(\"li\", {\n      \"data-index\": index,\n      key: index,\n      className: \"react-multi-carousel-dot \" + (isActive ? \"react-multi-carousel-dot--active\" : \"\")\n    }, React.createElement(\"button\", {\n      onClick: function () {\n        return goToSlide(nextSlide);\n      }\n    }));\n  }));\n};\n\nexports.default = Dots;","map":null,"metadata":{},"sourceType":"script"}