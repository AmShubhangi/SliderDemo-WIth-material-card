{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar React = require(\"react\"),\n    common_1 = require(\"./common\"),\n    common_2 = require(\"./common\");\n\nfunction populatePreviousSlides(state, props, slidesHavePassed) {\n  void 0 === slidesHavePassed && (slidesHavePassed = 0);\n  var nextSlides,\n      nextPosition,\n      currentSlide = state.currentSlide,\n      itemWidth = state.itemWidth,\n      slidesToShow = state.slidesToShow,\n      children = props.children,\n      showDots = props.showDots,\n      infinite = props.infinite,\n      slidesToSlide = common_1.getSlidesToSlide(state, props),\n      nextMaximumSlides = currentSlide - slidesHavePassed - (0 < slidesHavePassed ? 0 : slidesToSlide),\n      additionalSlides = (React.Children.toArray(children).length - slidesToShow) % slidesToSlide;\n  return nextPosition = 0 <= nextMaximumSlides ? (nextSlides = nextMaximumSlides, showDots && !infinite && 0 < additionalSlides && common_2.isInRightEnd(state) && (nextSlides = currentSlide - additionalSlides), -itemWidth * nextSlides) : nextSlides = nextMaximumSlides < 0 && 0 !== currentSlide ? 0 : void 0, {\n    nextSlides: nextSlides,\n    nextPosition: nextPosition\n  };\n}\n\nexports.populatePreviousSlides = populatePreviousSlides;","map":null,"metadata":{},"sourceType":"script"}