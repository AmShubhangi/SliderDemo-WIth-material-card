{"ast":null,"code":"\"use strict\";\n\nfunction populateSlidesOnMouseTouchMove(state, props, initialX, lastX, clientX) {\n  var direction,\n      nextPosition,\n      itemWidth = state.itemWidth,\n      slidesToShow = state.slidesToShow,\n      totalItems = state.totalItems,\n      transform = state.transform,\n      currentSlide = state.currentSlide,\n      infinite = props.infinite,\n      canContinue = !1,\n      slidesHavePassedRight = Math.round((initialX - lastX) / itemWidth),\n      slidesHavePassedLeft = Math.round((lastX - initialX) / itemWidth),\n      isMovingLeft = initialX < clientX;\n\n  if (clientX < initialX && !!(slidesHavePassedRight <= slidesToShow)) {\n    direction = \"right\";\n    var translateXLimit = Math.abs(-itemWidth * (totalItems - slidesToShow)),\n        nextTranslate = transform - (lastX - clientX),\n        isLastSlide = currentSlide === totalItems - slidesToShow;\n    (Math.abs(nextTranslate) <= translateXLimit || isLastSlide && infinite) && (nextPosition = nextTranslate, canContinue = !0);\n  }\n\n  isMovingLeft && slidesHavePassedLeft <= slidesToShow && (direction = \"left\", ((nextTranslate = transform + (clientX - lastX)) <= 0 || 0 === currentSlide && infinite) && (canContinue = !0, nextPosition = nextTranslate));\n  return {\n    direction: direction,\n    nextPosition: nextPosition,\n    canContinue: canContinue\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.populateSlidesOnMouseTouchMove = populateSlidesOnMouseTouchMove;","map":null,"metadata":{},"sourceType":"script"}