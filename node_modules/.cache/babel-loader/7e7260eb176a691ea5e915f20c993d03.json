{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar React = require(\"react\"),\n    utils_1 = require(\"./utils\"),\n    CarouselItems = function (_a) {\n  var props = _a.props,\n      state = _a.state,\n      goToSlide = _a.goToSlide,\n      clones = _a.clones,\n      itemWidth = state.itemWidth,\n      children = props.children,\n      infinite = props.infinite,\n      itemClass = props.itemClass,\n      partialVisbile = props.partialVisbile,\n      _b = utils_1.getInitialState(state, props),\n      flexBisis = _b.flexBisis,\n      shouldRenderOnSSR = _b.shouldRenderOnSSR,\n      domFullyLoaded = _b.domFullyLoaded,\n      partialVisibilityGutter = _b.partialVisibilityGutter;\n\n  return _b.shouldRenderAtAll ? React.createElement(React.Fragment, null, (infinite ? clones : React.Children.toArray(children)).map(function (child, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      \"data-index\": index,\n      onClick: function () {\n        props.focusOnSelect && goToSlide(index);\n      },\n      \"aria-hidden\": utils_1.getIfSlideIsVisbile(index, state) ? \"false\" : \"true\",\n      style: {\n        flex: shouldRenderOnSSR ? \"1 0 \" + flexBisis + \"%\" : \"auto\",\n        position: \"relative\",\n        width: domFullyLoaded ? (partialVisbile && partialVisibilityGutter ? itemWidth - partialVisibilityGutter : itemWidth) + \"px\" : \"auto\"\n      },\n      className: \"react-multi-carousel-item \" + (utils_1.getIfSlideIsVisbile(index, state) ? \"react-multi-carousel-item--active\" : \"\") + \" \" + itemClass\n    }, child);\n  })) : null;\n};\n\nexports.default = CarouselItems;","map":null,"metadata":{},"sourceType":"script"}